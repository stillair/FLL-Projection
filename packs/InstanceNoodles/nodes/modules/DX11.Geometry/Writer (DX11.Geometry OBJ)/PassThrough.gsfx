
struct vsin
{
	float4 pos : POSITION;
	float3 norm : NORMAL;
	float2 TexCd : TEXCOORD0;
	
};


vsin VS(vsin input)
{	
    return input;
}

vsin GS(vsin input)
{	
    return input;
}

GeometryShader StreamOutGS = ConstructGSWithSO( CompileShader( vs_5_0, VS() ), "POSITION.xyz; NORMAL.xyz; TEXCOORD.xy", NULL, NULL, NULL, -1);
GeometryShader StreamOutGSTest = ConstructGSWithSO( CompileShader( vs_5_0, GS() ), "POSITION.xyz; NORMAL.xyz; TEXCOORD.xy", NULL, NULL, NULL, -1);
technique10 PassMesh
{
    pass P0
    {
        SetVertexShader( CompileShader( vs_5_0, VS() ) );
        SetGeometryShader( StreamOutGS );
    }  
}

technique10 PassMeshGS
{
    pass P0
    {
        SetVertexShader( CompileShader( vs_5_0, VS() ) );
        SetGeometryShader( StreamOutGSTest );
    }  
}